install.packages("swirl")
library("swirl")
swirl()
swirl()
library("swirl")
swirl()
library("swirl")
swirl()
library("swirl")
swirl()
swirl()
librar("swirl")
library("swirl")
swirl()
quartz()
?Devices
datasets plot
with(faitful, plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
q()
library('swirl')
swirl()
head()
head(5)
head(pollution)
dim(pollution)
pollution$pm25
summary(pollution$pm25)
quantile(ppm)
library("swirl")
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), cars$dist, "SWIRL rules!")
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income, state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp~Income, state, layout = c(2,2))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
library('swirl')
swirl(0)
head(airquality)
range(aiquality$ozone, na.rm = true)
range(airquality$ozone, na.rm = true)
range(airquality$ozone, na.rm = TRUE)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality = data)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone(ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
main("Ozone and Wind in New York City")
main = "Ozone and Wind in New York City"
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par('fg')
par('pch')
par('lty')
plot(airquality$Wind, airquality$Ozone, equal = "n")
plot(airquality$Wind, type = "n", airquality$Ozone)
title(main="Wind and Ozone in NYC")
may = airquality$Month.5
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, lty = "solid blue triangles")
points(may$Wind, may$Ozone, lty = 2)
points(may$Wind, may$Ozone, col = "blue", pch=17)
?pch
notmay(airquality, Month != 5)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch =8)
legend("topright", (17,8), ("blue","red"), ("May", "Other Months"))
legend("topright"  (17,8) ("blue","red") ("May", "Other Months"))
legend("topright"  (17,8) ("blue","red") legend = ("May", "Other Months"))
legend("topright"  pch = c(17,8) col= c("blue","red") legend = c("May", "Other Months"))
legend("topright",pch = c(17,8), col= c("blue","red"),legend = c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
?abline
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, title(main = "Ozone and Wind"))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c (1,3), mar= c(4,4,2,1), oma = c(0,0,2,0))
?oma
??oma
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
str(mpg)
?str
qplot(displ, hwy, mpg)
qplot(mpg$displ, mpg$hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color=drv, geom = c("point", "smooth"))
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ . ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method = "loess")
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method="loess")
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method="loess")
?method
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method= loess)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv)
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method= "loess")
evaluate()
next
next()
break
info()
skip()
swirl()
qplot(displ, hwy, data = mpg, geom=c("point", "smooth"),facets=.~drv,method= "loess")
play()
nxt()
skip()
swirl()
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hclust(d=distxy)
hc <- hclust(distxy)
plot(hc)
as.dendogram(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col = "blue")
abline(h=.4, col = "red")
5
12
abline(h=0.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
swirl()
cmat
points(cx,cy, col = c("red", "orange", "purple", pch = 3+, cex = 2, lwd = 2))
points(cx,cy, col = c("red", "orange", "purple"), pch = 3+, cex = 2, lwd = 2)
points(cx,cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y, cx, cy)
apply(distTmp, which.min(distTmp))
apply(distTmp, FUN, which.min(distTmp))
apply(distTmp, 2, which.min(distTmp))
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1)
points(x,y,pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(x,y, col = cols1, pch = 8, cex = 2, lwd = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch=19, cex=2, col= cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
q()
source('~/Dropbox/Kiki-project/villageMapGenerator.R')
source('~/Dropbox/Kiki-project/villageMapGenerator.R')
getwd()
source('~/Dropbox/Kiki-project/villageMapGenerator.R')
getwd()
?readShapePoly
rm(list=ls())
setwd(~)
setwd("~")
getwd()
?system.file
?readShapePoly
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
sim
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
source('~/Documents/Stats/section notes/160906.R')
x
fx
rm(list=ls())
source('~/Dropbox/Kiki-project/townMapGenerator.R')
townMapGenerator(filePath, "全台", "3 4", 6, 180, 150, FALSE,"指數")
